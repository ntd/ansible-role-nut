---
# Sample configurations.
#
# For testing, use:
#
#     ansible-playbook -CD tests/test.yml

- name: Skip installation.
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_packages: []

- name: Default configuration.
  hosts: localhost
  roles:
    - role: ntd.nut

- name: Installation only.
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_enable_service: false
      nut_managed_config: false

- name: NetClient only mode.
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_mode: netclient
      nut_users:
        - name: monitor
          password: Whatever...
      nut_ups: []
      nut_services:
        - nut-monitor

- name: NetClient only mode (deprecated way).
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_users: [] # Clear default nut_users introduced recently
      nut_mode: netclient
      nut_user: monitor
      nut_password: Whatever...
      nut_ups: []
      nut_services:
        - nut-monitor

- name: Typical configuration with UPS used for a clean shutdown.
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_extra: |
        NUT_DEBUG_SYSLOG=stderr
      nut_users:
        - name: adminuser
          password: adminpassword
          extra: |
            instcmds = ALL
      nut_ups:
        - name: riello
          driver: riello_usb
          device: /dev/ttyUSB0
          description: iPlug 800
      nut_upsmon_extra: |
        NOTIFYFLAG ONBATT SYSLOG+WALL+EXEC
        NOTIFYFLAG NOCOMM SYSLOG+WALL+EXEC
      nut_upsmon_notifycmd: /usr/local/bin/mynotifycmdscript
      nut_upsmon_notifycmd_content: |
        #!/bin/bash
        case $NOTIFYTYPE in
            ONBATT)
                logger "On battery: shutting down everything!"
                upscmd -u adminuser -p adminpassword pc shutdown.return
                # Ensure the previous command reached the UPS
                sleep 1
                # The `nut` user should be able to sudo without password
                sudo systemctl -i --no-ask-password poweroff
                ;;
            NOCOMM)
                logger "No communication: do something else..."
                ;;
        esac

- name: Stand-alone with multiple users and multiple UPS.
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_users:
        - name: first
          password: password1
          role: primary
        - name: second
          password: password2
          extra: |
            role = admin
            actions = set
            actions = fsd
        - name: third
          password: password3
          extra: |
            instcmds = test.panel.start
            instcmds = test.panel.stop
      nut_ups:
        - name: riello
          driver: riello_usb
          device: /dev/ttyUSB0
          description: iPlug 800
          extra: |
            localcalculation
        - name: big
          driver: apcsmart
          device: /dev/cua00
          description: Somewhat complex UPS
          extra: |
            cable = 940-0095B
            sdtype = 2
        - name: eaton
          driver: blazer_usb
          device: /dev/ttyUSB1
          description: E Series NV

- name: Stand-alone with multiple UPS (deprecated way).
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_user: monitor
      nut_users: [] # Clear default nut_users introduced recently
      nut_password: Whatever...
      nut_ups:
        - name: riello
          driver: riello_usb
          device: /dev/ttyUSB0
          description: iPlug 800
        - name: eaton
          driver: blazer_usb
          device: /dev/ttyUSB1
          description: E Series NV

- name: With undefined nut_host.
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_host:
      nut_packages: []

- name: Test empty extras.
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_extra:
      nut_ups_extra:
      nut_upsd_extra:
      nut_upsmon_extra:

- name: Unexistent services should not stop the processing (deprecated).
  hosts: localhost
  roles:
    - role: ntd.nut
      nut_packages: []
      nut_services:
        - unexistent-service
